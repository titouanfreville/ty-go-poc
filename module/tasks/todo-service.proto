syntax = "proto3";
package tasks;

// Task we have to do
message ToDo {
    int64 id = 1;
    string resume = 2;
    string content = 3;
    int64 reporter_id = 4;
    int64 worker_id = 5;
    string status = 6;
}

// Request data to create new todo task
message CreateRequest {
    string api = 1;

    // Task entity to add
    ToDo toDo = 2;
}

// Response that contains data for created todo task
message CreateResponse {
    string api = 1;

    // ID of created task
    int64 id = 2;
}

// Request data to read todo task
message ReadRequest {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Unique integer identifier of the todo task
    int64 id = 2;
}

// Contains todo task data specified in by ID request
message ReadResponse {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Task entity read by ID
    ToDo toDo = 2;
}

// Request data to update todo task
message UpdateRequest {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Task entity to update
    ToDo toDo = 2;
}

// Contains status of update operation
message UpdateResponse {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // Contains number of entities have beed updated
    // Equals 1 in case of succesfull update
    int64 updated = 2;
}

// Request data to read all todo task
message ReadAllRequest {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;
}

// Contains list of all todo tasks
message ReadAllResponse {
    // API versioning: it is my best practice to specify version explicitly
    string api = 1;

    // List of all todo tasks
    repeated ToDo toDos = 2;
}

// Service to manage list of todo tasks
service ToDoService {
    // Create new todo task
    rpc Create (CreateRequest) returns (CreateResponse) {}

    // Read todo task
    rpc Read (ReadRequest) returns (ReadResponse) {}

    // Update todo task
    rpc Update (UpdateRequest) returns (UpdateResponse) {}
    // Delete todo task
    // pc Delete (DeleteRequest) returns (DeleteResponse);

    // Read all todo tasks
    rpc ReadAll (ReadAllRequest) returns (ReadAllResponse){};
}